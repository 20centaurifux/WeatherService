<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <title>@ViewBag.Title</title>

    <link rel="stylesheet" type="text/css" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link href="~/lib/Font-Awesome/css/font-awesome.min.css" rel="stylesheet" />
    <link href="~/lib/datatables/media/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
    <link href="~/lib/bootstrap-multiselect/dist/css/bootstrap-multiselect.css" rel="stylesheet" />
    <link href="~/lib/gridster/dist/jquery.gridster.min.css" rel="stylesheet" />

    <style type="text/css">
        div.filter
        {
            border:solid 1px #e4e4e4;
            padding:5px;
        }

        .gridster ul
        {
            list-style:none;
        }

        .gridster li
        {
            text-align:center;
            position:relative;
            box-sizing:border-box;
            -moz-box-sizing:border-box;
            -webkit-box-sizing:border-box;
            padding:5px;
            background-color:green;
        }

        .gridster li span
        {
            width:100%;
            display:block;
        }

        .gridster li span:before
        {
            display:block;
            height:64px;
            width:100%;
            position:absolute;
            top:15%;
            left:0;
            right:0;
        }

        .gridster li span:after
        {
            position:absolute;
            bottom:5px;
            left:0;
            right:0;
        }
    </style>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>

    <script src="~/lib/popper.js/dist/umd/popper.min.js"></script>
    <script src="~/lib/jquery.generateId/dist/generate-id.min.js"></script>
    <script src="~/lib/jquery.validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/Microsoft.jQuery.Unobtrusive.Validation/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
    <script src="~/lib/vue/dist/vue.min.js"></script>
    <script src="~/lib/datatables/media/js/jquery.dataTables.min.js"></script>
    <script src="~/lib/datatables/media/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/lib/bootstrap-multiselect/dist/js/bootstrap-multiselect.js"></script>
    <script src="~/lib/gridster/dist/jquery.gridster.min.js"></script>

    <script src="~/js/jquery.ConfirmDialog.js"></script>

    <script type="text/javascript">
        var app = null;

        $(document).ready(function()
        {
            Vue.component('stationSelection',
            {
                template: '<div class="dropdown-menu" aria-labelledby="navbarStations">' +
                          '<a v-for="station in this.sortedStations" :key="station.id" class="dropdown-item" v-bind:href="station.url">{{station.name}}</a>' +
                          '<span v-if="this.stations.length==0" class="dropdown-item disabled">No stations available.</span>' +
                          '</div>',
                props: ['stations'],
                computed:
                {
                        sortedStations: function()
                        {
                            var dup = this.stations.map(s => $.extend(s, {url: '/WeatherStation/' + s['id'] }));

                            dup.sort(function(a, b)
                            {
                                var first = a['name'].toLowerCase();
                                var second = b['name'].toLowerCase();

                                return ((first < second) ? -1 : ((first > second) ? 1 : 0));
                            });

                            return dup;
                        }
                }
            });

            app = new Vue(
            {
                el: '#root',
                data:
                {
                    stations: []
                },
                created: function() {
                    this.$on('station-added', function(station)
                    {
                        this.stations.push(station);
                    });

                    this.$on('station-changed', function(station)
                    {
                        var index = this.stations.findIndex(function(e) { return e.id == station.id });

                        this.$set(this.stations, index, station);
                    });

                    this.$on('station-removed', function(stationId)
                    {
                        var index = this.stations.findIndex(function(e) { return e.id == stationId });

                        this.stations.splice(index, 1);
                    });
                },
                mounted: function()
                {
                    this.loadData();
                },
                methods:
                {
                    loadData()
                    {
                        var self = this;

                        $.ajax(
	                    {
		                    url: "/WeatherStations/Available",
                            type: "GET",
		                    dataType: "json"
                        })
                        .done(function(stations)
                        {
                            self.stations = stations;
                        })
                        .fail(function()
                        {
                            alert("Couldn't receive station list, please try again later.");
                        });
                    }
                }
            });
        });
    </script>
</head>

<body>
    <div id="root">
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <a class="navbar-brand" href="#">Weather Data</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarMain" aria-controls="navbarMain" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarMain">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item active">
                        <a class="nav-link" href="/Home">Home</a>
                    </li>

                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarStations" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Stations
                        </a>

                        <station-selection :stations="stations"></station-selection>
                    </li>

                    @if(User.IsInRole("Administrator"))
                    {
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="navbarAdmin" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Administration
                            </a>

                            <div class="dropdown-menu" aria-labelledby="navbarAdmin">
                                <a class="nav-link" href="/Accounts">User Accounts</a>
                                <a class="nav-link" href="/WeatherStations">Weather Stations</a>
                            </div>
                        </li>
                    }

                    @if(User.Identity.IsAuthenticated)
                    {
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="navbarMyAccount" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                My Account
                            </a>

                            <div class="dropdown-menu" aria-labelledby="navbarMyAccount">
                                <a class="nav-link" href="/UserProfile">My Profile</a>
                                <a class="nav-link" href="/Logout">Logout</a>
                            </div>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a class="nav-link" href="/Login">Login</a>
                        </li>
                    }
                </ul>

                <ul class="navbar-nav" id="action-buttons">
                </ul>
            </div>
        </nav>
    </div>

    @RenderBody()
</body>
</html>